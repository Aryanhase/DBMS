CREATE TABLE Stud_Marks (                    --insert data in stud marks only
	name VARCHAR2(30),
	total_marks NUMBER(4)
);


INSERT INTO Stud_Marks  VALUES ('Alice', 1500);
INSERT INTO Stud_Marks  VALUES ('Bob', 1250);
INSERT INTO Stud_Marks  VALUES ('Charlie', 980);
INSERT INTO Stud_Marks  VALUES ('Diana', 845);
INSERT INTO Stud_Marks  VALUES ('Eve', 650);



CREATE TABLE Result(
	roll NUMBER PRIMARY KEY,
	name VARCHAR(30),
	class VARCHAR(20)
);

CREATE SEQUENCE result_seq                               --sequence for result table 
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE PROCEDURE proc_Grade (                  --procedure with two parameters
	p_name IN VARCHAR2,
	p_total_marks NUMBER
) AS
	v_class VARCHAR2(20);
BEGIN
	IF p_total_marks BETWEEN 990 AND 1500 THEN
		v_class :='Distinction';
	ELSIF p_total_marks BETWEEN 900 AND 989 THEN
		v_class :='First Class';
	ELSIF p_total_marks BETWEEN 825 AND 899 THEN
		v_class :='Higher Second Class';
	ELSE
		v_class := 'No category';
	END IF;

	INSERT INTO Result (roll, name, class)
	VALUES (result_seq.NEXTVAL, p_name, v_class);

	COMMIT;
END proc_grade;



DECLARE                                                                                        --pl sql codeblock
	v_name VARCHAR(30);
	v_total_marks NUMBER(4);
BEGIN
	FOR student IN (SELECT name, total_marks FROM Stud_Marks) LOOP
		v_name := student.name;
		v_total_marks := student.total_marks;

		proc_Grade(v_name, v_total_marks);
	END LOOP;
END;

 --at the end only show the result table via select query
